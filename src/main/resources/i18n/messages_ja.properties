
# hibernate-validator default messages
# https://github.com/hibernate/hibernate-validator/blob/master/engine/src/main/resources/org/hibernate/validator/ValidationMessages.properties
#javax.validation.constraints.AssertFalse.message = must be false
#javax.validation.constraints.AssertTrue.message = must be true
#javax.validation.constraints.DecimalMax.message = must be less than ${inclusive == true ? 'or equal to ' : ''}{value}
#javax.validation.constraints.DecimalMin.message = must be greater than ${inclusive == true ? 'or equal to ' : ''}{value}
#javax.validation.constraints.Digits.message = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
#javax.validation.constraints.Future.message = must be in the future
javax.validation.constraints.Max.message = {value}より大きい値は指定出来ません
javax.validation.constraints.Min.message = {value}より小さい値は指定出来ません
javax.validation.constraints.NotNull.message = 入力必須項目です
#javax.validation.constraints.Null.message = must be null
#javax.validation.constraints.Past.message = must be in the past
#javax.validation.constraints.Pattern.message = must match "{regexp}"
javax.validation.constraints.Size.message = {min}〜{max}文字で入力してください
#org.hibernate.validator.constraints.CreditCardNumber.message = invalid credit card number
#org.hibernate.validator.constraints.EAN.message = invalid {type} barcode
org.hibernate.validator.constraints.Email.message = メールアドレスの形式が不正です
#org.hibernate.validator.constraints.Length.message = length must be between {min} and {max}
#org.hibernate.validator.constraints.LuhnCheck.message = The check digit for ${validatedValue} is invalid, Luhn Modulo 10 checksum failed
#org.hibernate.validator.constraints.Mod10Check.message = The check digit for ${validatedValue} is invalid, Modulo 10 checksum failed
#org.hibernate.validator.constraints.Mod11Check.message = The check digit for ${validatedValue} is invalid, Modulo 11 checksum failed
#org.hibernate.validator.constraints.ModCheck.message = The check digit for ${validatedValue} is invalid, ${modType} checksum failed
org.hibernate.validator.constraints.NotBlank.message = 入力必須項目です
#org.hibernate.validator.constraints.NotEmpty.message = may not be empty
#org.hibernate.validator.constraints.ParametersScriptAssert.message = script expression "{script}" didn't evaluate to true
#org.hibernate.validator.constraints.Range.message = must be between {min} and {max}
#org.hibernate.validator.constraints.SafeHtml.message = may have unsafe html content
#org.hibernate.validator.constraints.ScriptAssert.message = script expression "{script}" didn't evaluate to true
#org.hibernate.validator.constraints.URL.message = must be a valid URL
#org.hibernate.validator.constraints.br.CNPJ.message = invalid Brazilian corporate taxpayer registry number (CNPJ)
#org.hibernate.validator.constraints.br.CPF.message = invalid Brazilian individual taxpayer registry number (CPF)
#org.hibernate.validator.constraints.br.TituloEleitoral.message = invalid Brazilian Voter ID card number

# typemismatch

typeMismatch="{0}"を選び直してください
typeMismatch.int="{0}"には数値を入力してください
typeMismatch.double="{0}"には数値を入力してください
typeMismatch.float="{0}"には数値を入力してください
typeMismatch.long="{0}"には数値を入力してください
typeMismatch.short="{0}"には数値を入力してください
typeMismatch.java.lang.Integer="{0}"には数値を入力してください
typeMismatch.java.lang.Double="{0}"には数値を入力してください
typeMismatch.java.lang.Float="{0}"には数値を入力してください
typeMismatch.java.lang.Long="{0}"には数値を入力してください
typeMismatch.java.lang.Short="{0}"には数値を入力してください
typeMismatch.java.util.Date="{0}"には指定された形式で日付を入力してください

# custom validate
com.area_b.common.validation.samevalue=同じ値を入力してください。

# filed names
#giftWrapping = ギフトラッピング
#paymentMethod = お支払い方法
